plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.4.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.github.ben-manes.versions' version '0.13.0'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

// def osName = System.getProperty("os.name").toLowerCase()
// ext.platform = osName.contains("mac") ? 'mac' : osName.contains("windows") ? 'win' : osName;

apply plugin: 'java'
apply plugin: 'application'
apply from: 'gradle/publishing.gradle'

sourceCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.scaledfx.Main'
}

wrapper {
    gradleVersion = '6.5'
}

description = 'JavaFX Region for scaling arbitrary content nodes.'

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }
    ext.year   = '2016-'+new java.text.SimpleDateFormat("yyyy").format(new Date())
    ext.author = 'Michael Hoffer <info@michaelhoffer.de>'
}

repositories {
    jcenter()
}

dependencies {
    testCompile "org.testfx:testfx-core:4.0.15-alpha"
    testCompile 'org.testfx:testfx-junit:4.0.15-alpha'
}

// run {
//     doFirst {
//         jvmArgs += ["-Xmx12000m" ]
//     }
// }

javafx {
    modules = [ 'javafx.controls', /*TODO declare as test dependency only*/'javafx.fxml' ]
}

mainClassName = 'eu.mihosoft.scaledfx.Main'

jar {
    manifest {
        attributes('Automatic-Module-Name': 'eu.mihosoft.scaledfx')
    }
}
